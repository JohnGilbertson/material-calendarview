apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion

    versionCode Integer.parseInt(project.VERSION_CODE)
    versionName project.VERSION_NAME

    vectorDrawables.useSupportLibrary = true
  }

  lintOptions {
    abortOnError false
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}


def libraryGroupId = "com.github.prolificinteractive"
def libraryArtifactId = 'material-calendarview'
def libraryVersion = android.defaultConfig.versionName


group = "com.github.prolificinteractive"
version = android.defaultConfig.versionName
archivesBaseName = 'material-calendarview'

dependencies {
  implementation rootProject.ext.threeTenAbp
  implementation rootProject.ext.supportV4
  implementation rootProject.ext.supportAppCompat
  implementation rootProject.ext.supportAnnotations

  rootProject.ext.testDep.each { testImplementation it }
  rootProject.ext.androidTestDep.each { androidTestImplementation it }
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
  options.addStringOption('encoding', 'UTF-8')
  options.addStringOption('charSet', 'UTF-8')
}

android.libraryVariants.all { variant ->
  task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
    title "Material CalendarView ${version}"
    description "Generates Javadoc for $variant.name."
    source = variant.javaCompileProvider.get().source
    doFirst {
      classpath = files(variant.javaCompiler.classpath.files, project.android.getBootClasspath())
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    options {
      links "http://docs.oracle.com/javase/7/docs/api/"
      linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
    }
  }
}

publishing {
  publications {
    aar(MavenPublication) {
      groupId libraryGroupId
      version libraryVersion
      artifactId libraryArtifactId

      artifact("$buildDir/outputs/aar/${artifactId}-${version}.aar")
    }
  }
}

artifactory {
  contextUrl = 'http://foocode.uk:8081/artifactory'
  publish {
    repository {
      repoKey = 'libs-release-local'

      username = artifactory_username
      password = artifactory_password
    }
    defaults {
      publications('aar')
      publishArtifacts = true

      properties = ['qa.level': 'basic', 'q.os': 'android', 'dev.team': 'core']
      publishPom = true
    }
  }
}